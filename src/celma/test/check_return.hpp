
/*==
**
**    ####   ######  #       #    #   ####
**   #    #  #       #       ##  ##  #    #
**   #       ###     #       # ## #  ######    (C) 2016-2019 Rene Eng
**   #    #  #       #       #    #  #    #        LGPL
**    ####   ######  ######  #    #  #    #
**
**
**  Description:
**    Defines to enable additional test functions in a Boost.Test module.
**
--*/


/// @file
/// See documentation of the macros CHECK_RETURN and CHECK_EQUAL_RETURN.<br>
/// This file does not include the necessary Boost.Test include files, since
/// the "test module" must be defined first.<br>
/// So, define the test module, include the Boost.Test include file(s), and then
/// include this file.


#ifndef CELMA_TEST_CHECK_RETURN_HPP
#define CELMA_TEST_CHECK_RETURN_HPP


// use this define for tests in non-BOOST function:
// - test the condition, print error message if condition fails
// - test the condition again, return false if it fails
// Usage:
// - in BOOST_AUTO_TEST_CASE function:
//      BOOST_REQUIRE( testfuncname( ...));
// - in function 'testfuncname':
//      CHECK_RETURN( x == y, "x and y should be equal, but are different");
#define  CHECK_RETURN( a, b) \
   { \
      const bool  checkResult = (a); \
      BOOST_CHECK_MESSAGE( checkResult, b); \
      if (!checkResult) \
      { \
         return false; \
      } \
   }


// use this define for tests in non-BOOST function for testing equality.
// the error message, if the test fails, is generated by Boost.Test itself.
// Usage:
// - in BOOST_AUTO_TEST_CASE function:
//      BOOST_REQUIRE( testfuncname( ...));
// - in function 'testfuncname':
//      CHECK_EQUAL_RETURN( x, y);
// @since  0.2, 06.04.2016
#define  CHECK_EQUAL_RETURN( a, b) \
   { \
      const bool  checkResult = ((a) == (b)); \
      BOOST_CHECK_EQUAL( a, b); \
      if (!checkResult) \
      { \
         return false; \
      } \
   }


#endif   // CELMA_TEST_CHECK_RETURN_HPP


// =====  END OF check_return.hpp  =====

