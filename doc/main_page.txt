
/*!
   \mainpage  CELMA v1.5.0

   \tableofcontents

   \section  intro  Introduction

   CELMA stands for 'C++ Extension Library Modules for Application". It is a
   collection of modules, classes and functions that are often used in C++
   projects on *UX.<br>
   The most prominent member being the 'argument handler' library, a replacement
   for getopt()/Boost.Program Options.

   \subsection  build  Build Information

   In order to build the library, the following environment is required:
   \li g++, using C++ 17 standard features
   \li Boost library
   \li CMake


   <hr>

   \section  contents  Contents

   These are the main modules of CELMA:

   Module Name       | Description
   ----------------  | ----------------
   Argument handling | Contains the class celma::prog_args::Handler which provides easy and feature-rich argument handling.
   Common            | Contains miscellaneous helper classes for your everyday tasks.
   Format            | Formatting-related stuff like fast integer-to-string conversion, printing data in an ASCII table, or format a text block.
   Indirect Acess    | Create a structure and a class that provides access to the members of the structure by name or its number. Starting point is celma::indirect_access::INDIRECT_ACCESS.
   Logging           | Define one or multiple logs with one or multiple destinations, each using its own format.


   <hr>

   \section  version  Versions

   \subsection  version_history  Version History

   The following version(s) of CELMA were built/distributed:

   Version  | Publish Date      | Description
   ------:  | ----------------: | -----------
     x.y.z  | under development | Thread safe logging, multi-process logging, logging configuration file, ...
     1.5.0  | 2018-06-28        | Added more macros for controlling when log messages should generated. Changed argument class handling pairs for improved functionality.
     1.4.3  | 2018-05-06        | Patch 1: Improved directory structure of range generator modules.
     1.4.3  | 2018-04-29        | Added destination value type "bitset" to argument handler.
     1.4.2  | 2018-04-12        | Added value-checks "is absolute path" in argument handler.
     1.4.1  | 2018-03-05        | Added value-checks "is file" and "is directory" in argument handler.
     1.4.0  | 2018-03-01        | Added classes FileInfo and FileOperations.
     1.3.0  | 2018-02-15        | Added class TextFile.
     1.2.1  | 2018-01-08        | Updated files/classes of "indirect access".
     1.2.0  | 2017-12-28        | Added feature 'clear vector before assigning values' in argument handling.
     1.1.0  | 2017-12-28        | Implemented 'usage parameters' module for handling the parameters for the usage.
     1.0.0  | 2017-12-28        | Added modules for logging.
     0.17.0 | 2017-11-14        | Simplified prog_args::Handler interface through destination() functions.
     0.16.0 | 2017-09-25        | Added output of constraints to usage.
     0.15.1 | 2017-08-07        | More warnings fixed.
     0.15.0 | 2017-08-06        | Always use class ArgumentKey for handling/storing the short/long argument key.
     0.14.4 | 2017-06-20        | Adapted tests of extractFuncName() to succeed with different compiler versions.
     0.14.3 | 2017-06-20        | Added module to_string.
     0.14.2 | 2017-05-12        | Added support for 'command' arguments: Argument that mark the start of an argument list for another object/tool.
     0.14.1 | 2017-05-09        | Fixed handling of arguments with optional values.
     0.14.0 | 2017-03-16        | Added ValueHandler class.
     0.13.5 | 2017-02-28        | Optimised int2str functions.
     0.13.4 | 2017-02-24        | Added SleepOnError and adjust functions.
     0.13.3 | 2017-02-18        | Added set of base classes for handling arbitrary value types.
     0.13.2 | 2017-02-18        | Improved handling of arguments with value type 'optional'.
     0.13.1 | 2017-02-07        | Some minor improvements for argument groups.
     0.13.0 | 2017-02-05        | Redesign of prog_args::Groups class in order to pass special parameters on to all argument handler objects correctly.
     0.12.2 | 2017-02-05        | Added perfect forwarding to singleton instance().
     0.0.4  | 2016-07-03        | Added sub-library 'reflection'.
     0.0.3  | 2016-04-10        | Argument handler library completed.


   \subsection  version_number  Version Number

   The CELMA version number will use the following format after the first
   1.0.0 release:<br>
   \c  \<major\>.\<minor\>.\<patch\>

   The handling of the version is like this:
   \li  The major number is changed if the interface of one or several classes
        have changed, and modifications to the project source code are necessary
        in order to use the new version.
   \li  The minor number is increased when new features are added to the library.
   \li  The patch number is increased when a bug fix was implemented on a
        production release.

   \subsection  git  git

   As mentioned before, the source code of CELMA is managed with git and
   available at https://www.github.com/Gemini67/Celma.

   There are two main branches in the git repository:
   \li master<br>
       Contains the current, tested, stable version of CELMA.
   \li develop<br>
       This is the default branch in the git repository to create a new version
       (branch) from.<br>
       Every time a new feature is developed or other major changes are
       necessary, a new branch is split from \c develop, the work done and
       tested and afterwards the changes are merged back unto \c develop.<br>
       Only stable, bug-free versions may be copied from develop to \c master.


   <hr>

   <b>\ref todo</b>

*/

